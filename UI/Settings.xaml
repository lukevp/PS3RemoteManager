<Window x:Class="PS3RemoteManager.Settings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="PS3 Remote Manager" Height="675" Width="995" MinHeight="675" Closed="Window_Closed"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:PS3RemoteManager"
        xmlns:nativeinput="clr-namespace:WindowsInput.Native;assembly=WindowsInput"
        
        >

    <Window.Resources>

        <ObjectDataProvider x:Key="cmdTypeFromEnum"
                            MethodName="GetValues" 
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:CmdType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="keyCodeFromEnum"
                            MethodName="GetValues" 
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="nativeinput:VirtualKeyCode"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

    </Window.Resources>



    <Grid>
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        </Grid.Resources>
        <TabControl Name="SettingsTabs" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <TabItem Header="Remote Configuration" Name="TabRemote">
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="300px"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ListView  Name="ConfigurationGrid" Grid.Column="0" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding SettingsVM.ActiveConfig.Commands}" SelectedItem="{Binding SettingsVM.ActiveCommand}" SelectionChanged="ConfigurationGrid_SelectionChanged_1">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Button Name" Width="150px" DisplayMemberBinding="{Binding ButtonName}"/>
                                <GridViewColumn Header="Setting Description" Width="450px" DisplayMemberBinding="{Binding Description}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <!--
                    <DataGrid Grid.Column="0" MouseDoubleClick="Configuration_DoubleClick" Name="ConfigurationGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding SettingsVM.ActiveConfig.Commands}" AutoGenerateColumns="False" CanUserAddRows="false" SelectionChanged="ConfigurationGrid_SelectionChanged" EnableRowVirtualization="False" IsReadOnly="True" Margin="252,0,0,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ButtonName" Width="1*" IsReadOnly="True" Binding="{Binding ButtonName}" />
                            <DataGridTextColumn Header="Setting Description" Width="3*" IsReadOnly="True" Binding="{Binding Description}" />
                        </DataGrid.Columns>
                    </DataGrid>-->
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30px"></RowDefinition>
                            <RowDefinition Height="50px"></RowDefinition>
                            <RowDefinition Height="30px"></RowDefinition>
                            <RowDefinition Height="50px"></RowDefinition>
                            <RowDefinition Height="30px"></RowDefinition>
                            <RowDefinition Height="50px"></RowDefinition>
                        </Grid.RowDefinitions>
                        <!--<Label Grid.Row="0" Content="{Binding SettingsVM.ActiveCommand.ButtonName}"/>-->
                        <Label Grid.Row="0" Content="Command Type" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                        <ComboBox Name="CommandType" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" Width="175"
                                  ItemsSource="{Binding Source={StaticResource cmdTypeFromEnum}}" SelectedItem="{Binding Path=SettingsVM.ActiveCommand.Type}" />
                        <!-- program items -->
                        <Label Grid.Row="2" Content="Program Path" Name="ProgramLabel" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                               Visibility="{Binding Path=SettingsVM.ActiveCommand.IsProgramCommand, Converter={StaticResource BoolToVisConverter} }"></Label>
                        <TextBox Name="ProgramPath" Grid.Column="1" Grid.Row="3" Margin="10,0,10,20" Text="{Binding Path=SettingsVM.ActiveCommand.ProgramPath, Mode=TwoWay}"
                        Visibility="{Binding Path=SettingsVM.ActiveCommand.IsProgramCommand, Converter={StaticResource BoolToVisConverter} }"/>
                        <!-- keyboard items -->
                        <Label Name="KeyLabel" Content="Key Binding" HorizontalAlignment="Center" Grid.Row="4" VerticalAlignment="Bottom"
                               Visibility="{Binding Path=SettingsVM.ActiveCommand.IsKeyCommand, Converter={StaticResource BoolToVisConverter} }"/>
                        <ComboBox Name="KeyBinding" Grid.Column="1" Grid.Row="5" Width="175px" Height="25px" VerticalAlignment="Top"
                                  ItemsSource="{Binding Source={StaticResource keyCodeFromEnum}}"
                                  Visibility="{Binding Path=SettingsVM.ActiveCommand.IsKeyCommand, Converter={StaticResource BoolToVisConverter} }" SelectedItem="{Binding Path=SettingsVM.ActiveCommand.KeyCode}"></ComboBox>
                    </Grid>
                </Grid>

            </TabItem>
            <TabItem Header="Application Settings" Name="TabApp">
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Row="0" Grid.Column="0" Content="Run on Windows Startup" Name="StartupCB" HorizontalAlignment="Left" Margin="15,0,0,0" VerticalAlignment="Center" IsChecked="{Binding SettingsVM.StartWithWindows, Mode=TwoWay}" />
                    <Button Content="Hibernate Remote Now" Grid.Column="1" HorizontalAlignment="Center" Grid.Row="6"  Padding="10,5,10,5" VerticalAlignment="Center" Click="Button_Click" Margin="106,10,71,15">
                    </Button>
                </Grid>
            </TabItem>
            <TabItem Header="Status Log" Name="TabStatus">
                <DataGrid Name="StatusLog" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding Log.LogMessages}" AutoGenerateColumns="False" CanUserAddRows="false">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Time" Width="1*" IsReadOnly="True" Binding="{Binding NiceTime}" />
                        <DataGridTextColumn Header="Log Message" Width="3*" IsReadOnly="True" Binding="{Binding Message}" />
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
